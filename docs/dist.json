{
  "openapi": "3.0.1",
  "info": {
    "title": "Ejoin Gateway HTTP API",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/goip_post_sms.html": {
      "get": {
        "summary": "SMS Sending",
        "deprecated": false,
        "description": "Tips:\n1. While not choose a port, device will pick up a random port to send SMS to every recipient.\n2. While chose more than one ports, and just one SMS recipient , then device will use all chose port to\nsend SMS to this recipient.\n3. If more ports, and more recipient designed, then every port will send SMS to every recipient\nseparately.",
        "tags": [],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Message type.",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sr_url",
            "in": "query",
            "description": "Status report forward url\nnumber, start from 1. ",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sr_cnt",
            "in": "query",
            "description": "Max num of SMS\nresult can keep in\ncache.",
            "required": false,
            "example": [
              "100"
            ],
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sr_prd",
            "in": "query",
            "description": "The max time SMS\nresult can keep in\ncache",
            "required": false,
            "example": [
              "30"
            ],
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sms_url",
            "in": "query",
            "description": "SMS forward URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sms_cnt",
            "in": "query",
            "description": "otal ports of device.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "max-slots",
            "in": "query",
            "description": "Total SIM slots of device. ",
            "required": false,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sms_prd",
            "in": "query",
            "description": "1. The time expired, even\nif not enough SMS is received, it is sent\nimmediately, then the timer is\nreset.",
            "required": false,
            "example": 30,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "task_num",
            "in": "query",
            "description": "",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tasks",
            "in": "query",
            "description": "Specific SMS send task",
            "required": false,
            "example": [
              "[{\"tid\":\"\", \"from\":\"\", \"to\":\"\", \"to_all\":\"\", \"sms\":\"\", \"chs\":\"\", \"coding\":0}]"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tid",
            "in": "query",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Use‘,’‘-’to assign more than one port(from\nchannel 1)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "one or more(use ‘,’to distinguish) recipients",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_all",
            "in": "query",
            "description": "1 represents all ports",
            "required": false,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sms",
            "in": "query",
            "description": "SMS content",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chs",
            "in": "query",
            "description": "Character coding set (utf8|base64)",
            "required": false,
            "example": "utf8",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coding",
            "in": "query",
            "description": "pecific the SMS codec",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1,
                2
              ]
            }
          },
          {
            "name": "smstype",
            "in": "query",
            "description": "SMS type",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1,
                2
              ]
            }
          },
          {
            "name": "smstitle",
            "in": "query",
            "description": "MMS subject：MMS subject format is UTF-8，this parameter could be empty",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_title_arr ay",
            "in": "query",
            "description": "Multiple MMS recipients and subject arrays. This field is valid only when smstype=2;\nFormat：\n\"to_title_array\":[[\"number1\",\"titile1\"],[\"number2\",\"titile2\"],\n...[\"number n\",\"titile n\"]]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "1、MMS attachment，This field take effect only when\nsmstype=1 or 2;\n2、Field content format: “File type1|base64 code file content 1;\nFile type2|base64 code file content 2;\n...... File type n|base64 code file content n” 3、Remarks：\na. There can be a most of 5 attachment,all attachment\ntotal length cannot exceed 100K,at present only\nsupport jpg、gif、txt、mp3 formatted file.\n“” N\nEjoin HTTP API Development Spec.\nVersion: 2.4.0\nDocument No : xxxxxxx 11/22/2024 Page 12\nb. File type and file content use symbol | separate\nc. Attachment is could be empty,send the content of the SMS filed as a TXT attachment\n4、example：\n“txt|zsSxvg==;jpg|4AAQSkZJRgABAgAAZABk”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "smsc",
            "in": "query",
            "description": "Store the SMSC number.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intvl",
            "in": "query",
            "description": "Interval of 2 SMS while device sending them(ms)",
            "required": false,
            "example": "0",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tmo",
            "in": "query",
            "description": "Max time while waiting sending result(second).",
            "required": false,
            "example": 30,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sdr",
            "in": "query",
            "description": "If enable the successfully send report. 1:enable,0:disable",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fdr",
            "in": "query",
            "description": "If enable the failed report.1:enable,0:disable.",
            "required": false,
            "example": 1,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          },
          {
            "name": "dr",
            "in": "query",
            "description": "If enable SMS delivery\nreport.1:enable,0:disable.",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "1": {
                    "summary": "成功示例",
                    "value": "{“type”:“send-sms”,“task_num”:n, “tasks”:[{“tid”:tid_1, …},…，{“tid”:tid_n, …}]}"
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "recipients"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "异常示例",
                    "value": {
                      "message": {
                        "recipients": "One of parameters: to, contacts, groups is required."
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "1": {
                    "summary": "异常示例",
                    "value": {
                      "message": "Invalid API key."
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "tasks": {
        "type": "object",
        "properties": {
          "tid": {
            "type": "integer",
            "description": "Task ID"
          },
          "from": {
            "type": "string",
            "description": "Use‘,’‘-’to assign more than one port(from\nchannel 1)"
          },
          "to": {
            "type": "string"
          },
          "to_all": {
            "type": "string"
          },
          "sms": {
            "type": "string"
          },
          "chs": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to",
          "to_all",
          "sms",
          "chs"
        ]
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls",
          "id",
          "category",
          "tags",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "宠物ID编号"
          },
          "category": {
            "$ref": "#/components/schemas/Category",
            "description": "分组"
          },
          "name": {
            "type": "string",
            "description": "名称",
            "examples": [
              "doggie"
            ]
          },
          "photoUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "照片URL"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "标签"
          },
          "status": {
            "type": "string",
            "description": "宠物销售状态",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "分组ID编号"
          },
          "name": {
            "type": "string",
            "description": "分组名称"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "标签ID编号"
          },
          "name": {
            "type": "string",
            "description": "标签名称"
          }
        },
        "xml": {
          "name": "Tag"
        }
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": {}
}